{
  "openapi": "3.0.0",
  "info": {
    "title": "Games API",
    "description": "Games API with express and mysql",
    "version": "1",
    "contact": "misaelmoreira99.sm@gmail.com"
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Games API"
    }
  ],
  "paths": {
    "/api/v1/genres": {
      "post": {
        "tags": [
          "genres"
        ],
        "summary": "Returns the genre created.",
        "description": "Create an genre.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenreRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenrePostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Empty name/genre already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenrePostResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "genres"
        ],
        "summary": "Returns all genres.",
        "description": "Get all genres.",
        "responses": {
          "200": {
            "description": "Returns all genres.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenreGetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/genres/{id}": {
      "delete": {
        "tags": [
          "genres"
        ],
        "summary": "Deletes a genre by id.",
        "description": "Delete a genre.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Genre id to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Id must have 36 characters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenreDeleteResponse"
                }
              }
            }
          },
          "404": {
            "description": "The genre does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenreDeleteResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content response."
          },
          "409": {
            "description": "This genre has games using it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenreDeleteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/platforms": {
      "post": {
        "tags": [
          "platforms"
        ],
        "summary": "Returns the platform created.",
        "description": "Create a platform.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlatformPostRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Empty name/genre already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformCreateResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "platforms"
        ],
        "summary": "Returns all platforms.",
        "description": "Returns all platforms.",
        "responses": {
          "200": {
            "description": "Returns all platforms.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/platforms/{id}": {
      "delete": {
        "tags": [
          "platforms"
        ],
        "summary": "Deletes a platform.",
        "description": "Delete a platform.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "platform id.",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Id must have 36 characters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              }
            }
          },
          "404": {
            "description": "Platform does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              }
            }
          },
          "204": {
            "description": "Successful operation."
          },
          "409": {
            "description": "This platform has games using it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/age-ratings": {
      "get": {
        "tags": [
          "age ratings"
        ],
        "summary": "Returns a list of age ratings.",
        "description": "Returns a list of age ratings",
        "responses": {
          "200": {
            "description": "Return a list of age ratings.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRatingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/games": {
      "get": {
        "tags": [
          "games"
        ],
        "summary": "Returns all games paginated or searchable games.",
        "description": "Returns all games paginated or searchable games.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "page",
            "type": "number",
            "example": "2"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "how the games should be sorted.",
            "type": "string",
            "example": "asc(releaseDate) or desc(releaseDate)"
          },
          {
            "name": "term",
            "in": "query",
            "required": false,
            "description": "The term to be search. It should be a game name, a genre name, or a platform name.",
            "type": "string",
            "example": "Witcher"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all games by page or the searchable games.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResourceGetAllResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "games"
        ],
        "summary": "Creates a game.",
        "description": "Creates a game and return it.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GamePostRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the game created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returns errors on the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          },
          "404": {
            "description": "Returns genres, platforms, or age rating that does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/games/{id}": {
      "get": {
        "tags": [
          "games"
        ],
        "summary": "Returns a game.",
        "description": "Returns a game.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "game id.",
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          }
        ],
        "responses": {
          "404": {
            "description": "Game does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns a game.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResourceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "games"
        ],
        "summary": "Deletes a game.",
        "description": "Deletes a game.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "game id.",
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          }
        ],
        "responses": {
          "404": {
            "description": "Game does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          },
          "204": {
            "description": "Game deleted successfully."
          }
        }
      },
      "put": {
        "tags": [
          "games"
        ],
        "summary": "Returns a game.",
        "description": "Returns a game.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "game id.",
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GamePostRequest"
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Returns genres, game, platforms, or age rating that does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResponse"
                }
              }
            }
          },
          "200": {
            "description": "Returns an updated game.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameResourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviewers": {
      "delete": {
        "tags": [
          "reviewers"
        ],
        "summary": "Deletes a reviewer account.",
        "description": "Deletes a reviewer account.",
        "security": {
          "bearerAuth": []
        },
        "responses": {
          "204": {
            "description": "Account was deleted successfully."
          },
          "401": {
            "description": "The token was not sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reviewer does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reviewers"
        ],
        "summary": "Sign up route.",
        "description": "Sign up route.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewerPostRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Returns errors in the request, like password and confirmPassword are not the same.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewerResponse"
                }
              }
            }
          },
          "201": {
            "description": "Creates a reviewer account and return a jwt token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewerResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "reviewers"
        ],
        "security": {
          "bearerAuth": []
        },
        "summary": "Change password route.",
        "description": "Change password route.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The password was successfully changed."
          },
          "400": {
            "description": "Token expired /  The new password and the confirm new password must be the same.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Th token was not sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reviewer does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviewers/tokens": {
      "post": {
        "tags": [
          "reviewers"
        ],
        "summary": "Sign in route.",
        "description": "Sign in route.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewerSignInRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Returns errors in the request, like password is weak.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewerResponse"
                }
              }
            }
          },
          "200": {
            "description": "Sign in successfully and return a jwt token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reviewer does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Credentials are wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviewers/passwords/{username}": {
      "post": {
        "tags": [
          "reviewers"
        ],
        "summary": "Send a random password for a reviewer when forgot password.",
        "description": "Send a random password for a reviewer when forgot password.",
        "responses": {
          "204": {
            "description": "Random password was successfully sent."
          },
          "400": {
            "description": "Username is not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Username does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviewers/tokens/refresh": {
      "post": {
        "tags": [
          "reviewers"
        ],
        "summary": "Generates a new token with an old token.",
        "description": "Generates a new token with an old token.",
        "security": {
          "bearerAuth": []
        },
        "responses": {
          "201": {
            "description": "A new token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "The token was not sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reviewer does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/games/{gameId}/reviews": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Creates a review.",
        "description": "Creates a review.",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "description": "The game id that will have a new review.",
            "type": "string"
          }
        ],
        "security": {
          "bearerAuth": []
        },
        "responses": {
          "204": {
            "description": "Successfully created."
          },
          "401": {
            "description": "The token was not sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Reviewer does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "GenericResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "confirmNewPassword": {
            "type": "string",
            "example": "123aBc@#"
          },
          "newPassword": {
            "type": "string",
            "example": "123aBc@#"
          }
        }
      },
      "ReviewerSignInRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "noobmaster3000"
          },
          "password": {
            "type": "string",
            "example": "123aBc@#"
          }
        }
      },
      "ReviewerTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "username": {
            "type": "string",
            "example": "noobmaster3000"
          }
        }
      },
      "ReviewerResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "A senha e a confirmação de senha devem ser iguais."
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewerTokenResponse"
            }
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "A senha e a confirmação de senha devem ser iguais."
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          }
        }
      },
      "ReviewerPostRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "noobmaster3000"
          },
          "password": {
            "type": "string",
            "example": "123aBc@#"
          },
          "confirmPassword": {
            "type": "string",
            "example": "123aBc@#"
          },
          "email": {
            "type": "string",
            "example": "noobmaster3000@gmail.com"
          }
        }
      },
      "GamePostRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "The Witcher 3"
          },
          "price": {
            "type": "number",
            "example": 100
          },
          "description": {
            "type": "string",
            "example": "O jogo mais premiado de uma geração agora aprimorado para a atual! Experimente The Witcher 3: Wild Hunt e suas expansões nesta coleção definitiva, com melhor desempenho, visuais aprimorados, novo conteúdo adicional, modo fotografia e muito mais!"
          },
          "ageRatingId": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "131db526-4599-4485-803d-cca8573693d5"
            }
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "131db526-4599-4485-803d-cca8573693d5"
            }
          }
        }
      },
      "Game": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          },
          "name": {
            "type": "string",
            "example": "The Witcher 3"
          },
          "description": {
            "type": "string",
            "example": "O jogo mais premiado de uma geração agora aprimorado para a atual! Experimente The Witcher 3: Wild Hunt e suas expansões nesta coleção definitiva, com melhor desempenho, visuais aprimorados, novo conteúdo adicional, modo fotografia e muito mais!"
          },
          "price": {
            "type": "number",
            "example": 100
          },
          "releaseDate": {
            "type": "string",
            "example": "2020-05-14T00:00:00.000Z"
          },
          "ageRating": {
            "type": "object",
            "$ref": "#/components/schemas/AgeRating"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Platform"
            }
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre"
            }
          }
        }
      },
      "GameResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          },
          "name": {
            "type": "string",
            "example": "The Witcher 3"
          },
          "description": {
            "type": "string",
            "example": "O jogo mais premiado de uma geração agora aprimorado para a atual! Experimente The Witcher 3: Wild Hunt e suas expansões nesta coleção definitiva, com melhor desempenho, visuais aprimorados, novo conteúdo adicional, modo fotografia e muito mais!"
          },
          "price": {
            "type": "number",
            "example": 100
          },
          "releaseDate": {
            "type": "string",
            "example": "2020-05-14T00:00:00.000Z"
          },
          "ageRating": {
            "type": "object",
            "$ref": "#/components/schemas/AgeRating"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Platform"
            }
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre"
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "/api/v1/games/:id"
                  }
                }
              },
              "PUT_update_game": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "/api/v1/genres/:id"
                  }
                }
              },
              "DELETE_delete_game": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "/api/v1/genres/:id"
                  }
                }
              }
            }
          }
        }
      },
      "GameResourcePaginated": {
        "type": "object",
        "properties": {
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameResource"
            }
          },
          "currentPage": {
            "type": "number",
            "example": 1
          },
          "lastPage": {
            "type": "string",
            "example": "a number or null"
          },
          "previousPage": {
            "type": "string",
            "example": "a number or null"
          },
          "nextPage": {
            "type": "string",
            "example": "a number or null"
          }
        }
      },
      "GameResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Game"
            }
          },
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Você enviou gêneros duplicados."
            }
          }
        }
      },
      "GameResourceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameResource"
            }
          },
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Você enviou gêneros duplicados."
            }
          }
        }
      },
      "GameResourceGetAllResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameResourcePaginated"
            }
          },
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Você enviou gêneros duplicados."
            }
          }
        }
      },
      "AgeRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          },
          "age": {
            "type": "string",
            "example": "L"
          },
          "description": {
            "type": "string",
            "example": "Livre para todos os públicos."
          }
        }
      },
      "AgeRatingResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeRating"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Platform": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Xbox Series S"
          },
          "id": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          }
        }
      },
      "PlatformResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Xbox Series S"
          },
          "id": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "/api/v1/platforms"
                  }
                }
              },
              "GET_list": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "/api/v1/platforms"
                  }
                }
              }
            }
          }
        }
      },
      "PlatformPostRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Xbox Series S"
          }
        }
      },
      "PlatformCreateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "This platform already exists./Platform name must have at least 3 characters."
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformResource"
            }
          }
        }
      },
      "PlatformResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Platform"
            }
          }
        }
      },
      "Genre": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "action"
          },
          "id": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          }
        }
      },
      "GenreResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "action"
          },
          "id": {
            "type": "string",
            "example": "131db526-4599-4485-803d-cca8573693d5"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "/api/v1/genres"
                  }
                }
              },
              "GET_list": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "/api/v1/genres"
                  }
                }
              }
            }
          }
        }
      },
      "GenreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "action"
          }
        }
      },
      "GenrePostResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "This genre already exists."
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenreResource"
            }
          }
        }
      },
      "GenreGetResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre"
            }
          }
        }
      },
      "GenreDeleteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "This genre does not exist./Id must have 36 characters."
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre"
            }
          }
        }
      }
    }
  }
}